services:
  db:
    image: postgres:15-alpine
    restart: always
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    expose:
      - 5432
      
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./core:/usr/src/app
    working_dir: /usr/src/app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    restart: always
    container_name: backend
    environment:
      - DEBUG=True
    env_file:
      - ./envs/dev/django/.env
    depends_on:
      - db  
  
  redis:
    image: redis:latest
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A core worker -l INFO
    depends_on:
      - redis
      - backend
    volumes:
      - ./core:/usr/src/app

  celery:
    build: 
      context: .
      dockerfile: ./Dockerfile
    container_name: celery
    command: celery -A core worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    volumes:
      - ./core:/usr/src/app

  celery_beat:
    build: 
      context: .
      dockerfile: ./Dockerfile
    container_name: celery_beat
    command: celery -A core beat --loglevel=info
    depends_on:
      - celery
    volumes:
      - ./core:/usr/src/app
      
  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - "5000:80"
      - "25:25"
      - "80:80"
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - serverOption__HostName=smtp4dev
      
volumes:
  smtp4dev-data: